{"componentChunkName":"component---src-templates-post-template-js","path":"/what-is-luma-theme-fallback-in-hyva/","result":{"data":{"wpgraphql":{"post":{"title":"What is Luma Theme Fallback in Hyvä: Complete Guide","content":"\n<p>Hyvä themes outperform Luma in terms of performance optimization and responsiveness. The theme is known to reduce store development time and cost.</p>\n\n\n\n<p>However, some store owners still look for a traditional Magento approach for certain pages on their website. That’s where the Luma theme fallback in Hyvä comes into play.</p>\n\n\n\n<p>This blog post will guide you through everything about Luma theme fallback, from benefits to implementation, configuration, and challenges you may face while using the feature.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What is Luma Theme Fallback in Hyvä?</h2>\n\n\n\n<p>Luma theme fallback is one of the noteworthy features in Hyvä themes.&nbsp;It allows Hyvä users to utilize the Luma theme as a fallback option for any missing styles or templates in the Hyvä themes.</p>\n\n\n\n<p>Does that mean that your store will be using the Luma theme? No.</p>\n\n\n\n<p>It implies that when you configure and enable the Hyvä theme for your Magento store, it will be your active theme, which comes with its own set of theme templates and styles.</p>\n\n\n\n<p>But if the Hyvä theme doesn’t have a particular template or design element or when you like to use Luma’s elements, then Magento will automatically fallback on the default Luma theme—for the corresponding template or style.</p>\n\n\n\n<p>The feature helps all the Hyvä users leverage design elements for customization.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Benefits of Luma Theme Fallback in Hyvä</h2>\n\n\n\n<h3 class=\"wp-block-heading\">Reduced Development Time</h3>\n\n\n\n<p>Fallback to the Luma theme lets developers access a range of pre-built elements. It fastens prototyping and utilizes the Luma and Hyvä complements. When migrating from the Luma theme to Hyvä, the fallback mechanism lets you perform phased implementation for the theme without hindering your sales and regular business from your e-store.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Flexibility in Customization</h3>\n\n\n\n<p>You will have access to Hyvä theme features, design elements, and the Luma theme’s functionalities, so you can choose the design elements you want to include from both themes. The right mix of new and existing design elements simplifies theme customization. Since developers can use the Luma theme’s components for prototyping, they can quickly test new features before committing to full Hyvä implementation.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Improved Cost Efficiency</h3>\n\n\n\n<p>Since your development team will be reusing Luma theme components with Hyvä theme design elements, it will save on development costs. The fallback feature gives you the upper hand to leverage the benefits of using two themes’ features and design components at the price of one.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Proven Stability</h3>\n\n\n\n<p>As you are already aware that the Luma theme is Magento’s default website theme. So, a fallback on Luma ensures your site will be more stable. Since many extensions are designed with the Luma theme in mind, the fallback option lets Hyvä inherit the properties and implement those third-party extensions seamlessly for your web store.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Improved User Experience</h3>\n\n\n\n<p>Maintain a cohesive look and feel across your site by keeping Luma and Hyvä’s design elements in sync. This will improve your overall user experience on the front end. Luma theme fallback will allow the usage of existing components, layouts, and blocks from the default theme. It ensures your site can function seamlessly with a Hyvä-based theme even with the core functionalities of Luma.</p>\n\n\n\n<h2 class=\"wp-block-heading\">How to Configure Luma Theme Fallback in Hyvä?</h2>\n\n\n\n<p>To configure the Luma theme fallback in Hyvä, you first need to set up the Hyvä theme or its&nbsp;<a href=\"https://meetanshi.com/blog/how-to-create-a-hyva-child-theme-in-magento-2/\">child theme</a>&nbsp;on your store. Then, follow these steps:</p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"install\">Step 1 – Install the Module for Magento Luma Theme Fallback</h3>\n\n\n\n<p>Add theme fallback module as a dependency in your project using composer.</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><code>composer require hyva-themes/magento2-theme-fallback</code></li>\n</ul>\n\n\n\n<p>Next, run the Magento installer and run these commands.</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><code>php bin/magento setup:upgrade</code></li>\n\n\n\n<li><code>php bin/magento setup:static-content:deploy</code></li>\n\n\n\n<li><code>php bin/magento cache:flush</code></li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"enable\">Step 2 – Enable Fallback in Magento Admin</h3>\n\n\n\n<p>Open your Magento admin panel and go to<strong>&nbsp;Content &gt; Design &gt; Configuration</strong>. Select your&nbsp;<strong>Store View</strong>&nbsp;to apply the Hyvä theme with Luma fallback here.</p>\n\n\n\n<p>Edit the theme configuration for your store view and set your Hyvä theme as the active theme.</p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"path\">Step 3 – Set Theme Path &amp; Specify URLs</h3>\n\n\n\n<p>Configure fallback theme path to&nbsp;<strong>frontend/Magento/luma.&nbsp;</strong>Then, mention the specific URLs here to use Luma fallback in the&nbsp;<strong>‘Apply fallback to requests containing’&nbsp;</strong>section.</p>\n\n\n\n<p>Save your changes, and Magento will now use your Hyvä theme with a fallback to Luma.</p>\n\n\n\n<p>Remember to&nbsp;<strong>‘Flush Magento Cache’</strong>&nbsp;to ensure the changes are applied. Now, navigate your website to see if Luma Fallback works correctly for your store.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter\"><img decoding=\"async\" src=\"https://meetanshi.com/blog/wp-content/uploads/2024/08/Magento-Hyva-Themes-Fallback--700x295.png\" alt=\"Luma Theme Fallback in Hyva\" class=\"wp-image-49003\"/></figure></div>\n\n\n<h2 class=\"wp-block-heading\">How Does Theme Fallback Work?</h2>\n\n\n\n<p>As you can see in the above image of your store’s admin panel, you can mention the URL path for the pages of your website where you would like to apply the fallback theme version.</p>\n\n\n\n<p>Let’s say you add the path customer/account/ to the ‘<strong>Apply fallback to requests containing</strong>‘ section.</p>\n\n\n\n<p>Then,</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>for all requests such as <code>customer/account/*</code>, the fallback will be applied.</li>\n\n\n\n<li>Example: the configured url is <code>customer/account/login</code>. Then, the fallback will be applied only for the login page.</li>\n</ul>\n\n\n\n<p>When you use the fallback option for those pages, you can see the frontend design of the Luma theme applied instead of Hyvä.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Are There Any Potential Challenges With Luma Theme Fallback?</h2>\n\n\n\n<p>Developers inevitably face specific challenges associated with Luma Theme Fallback in Hyvä. Let me list crucial ones here –</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><strong>Technical Debt &amp; Debugging Challenges:</strong> It may become harder to manage the code and troubleshoot issues that may arise over time. When both Hyvä and Luma elements are in use, the debugging process will need some extra effort.</li>\n\n\n\n<li><strong>Increased Maintenance Complexities:</strong> Every time a theme upgrade comes for Hyvä or Luma, your developers have to check the compatibility of new updates with the design elements used and fix issues wherever they occur.</li>\n\n\n\n<li><strong>Potential for future deprecation:</strong> Hyvä themes are comparatively newer in the market and constantly evolving. If you rely heavily on Luma theme elements, some of the functionalities may depreciate over time. In short, your website will not be future-proof in this case.</li>\n</ul>\n\n\n\n<p>Well, challenges outperform the benefits of Hyvä themes. That’s why the Hyvä theme grew successfully.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Make Most Out of Luma Theme Fallback</h2>\n\n\n\n<p>Style your store your way and redesign your Hyvä theme’s layout, adapting standard Magento approaches with Hyvä’s theme fallback feature.</p>\n\n\n\n<p>To make the most out of Hyvä themes with Luma’s support, connect with our Magento experts for our end-to-end<a href=\"https://meetanshi.com/magento-2-hyva-theme-development.html\">&nbsp;Magento 2 Hyvä Theme Development services</a>.</p>\n","date":"2024-08-28T17:57:13","author":{"node":{"name":"Shivbhadrasinh Gohil"}}}}},"pageContext":{"slug":"what-is-luma-theme-fallback-in-hyva"}},"staticQueryHashes":[],"slicesMap":{}}