{"componentChunkName":"component---src-templates-post-template-js","path":"/how-to-create-a-hyva-child-theme-in-magento-2/","result":{"data":{"wpgraphql":{"post":{"title":"How to Create a Hyvä Child Theme in Magento 2?","content":"\n<p>Hyvä themes have recently gained popularity among Magento 2 store owners. They are known for their simplicity and excellent performance.</p>\n\n\n\n<p>Further, the ease of customization of Hyvä themes has drastically increased their user base.</p>\n\n\n\n<p>In this blog post, you will learn to create a child theme in Magento 2 using Hyvä themes for your Magento 2 store.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Why Create a Hyvä Child Theme?</h2>\n\n\n\n<p>When you want to customize the Hyvä theme for your store and add functionalities of your choice, you have two options:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Creating a Hyvä child theme</li>\n\n\n\n<li>Duplicating the existing Hyvä theme</li>\n</ul>\n\n\n\n<p>The latter option requires sound technical expertise, and that’s why Magento users often opt for the first option—creating a Hyvä child theme.</p>\n\n\n\n<p>The Hyvä child themes are designed to allow developers to customize the core Magento 2 theme without modifying the core files. This practice ensures that updates of parent themes do not overwrite customizations.</p>\n\n\n\n<p>Here are a few more reasons for you to count on Hyvä child theme:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Child themes inherit styling functionalities from the parent Hyvä theme. This allows developers to make modifications or add new features, leveraging the styles.</li>\n\n\n\n<li>Hyvä child themes promote modularity in theme development. Hence, it will be easier for developers to build and manage custom features more structurally.</li>\n\n\n\n<li>Since the updates in the parent theme will be applied automatically to the child theme, you can create a future-ready store using Hyvä child themes.</li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\">Prerequisites for Creating a Hyvä Child Theme in Magento 2</h2>\n\n\n\n<p>Here is a checklist of all the essentials to create a child theme in Hyvä Magento 2:&nbsp;</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><strong>Magento 2 Store Compatibility: </strong>Hyvä themes are compatible with Magento 2.3 and above. Ensure you <a href=\"https://meetanshi.com/blog/how-to-upgrade-magento-2-to-latest-version/\">upgrade your Magento store</a> and that the instances run smoothly.</li>\n\n\n\n<li><strong>Hyvä Parent Theme: </strong>If you are already a Hyvä theme user, you will have the Hyvä parent theme installed on your Magento 2 store. If you are migrating to Hyvä themes, you must purchase their license from their official website. </li>\n</ul>\n\n\n\n<p><strong>Hyvä Specific Tools:</strong>&nbsp;A developmental tool kit and knowledge of the language like Tailwind CSS and Alpine.js. Here, Hyvä themes use Alpine.js to handle frontend interactions and Tailwind CSS for styling.</p>\n\n\n\n<h2 class=\"wp-block-heading\">How to Create a Hyvä Child Theme in Magento 2?</h2>\n\n\n\n<p>Follow the below steps for Magento 2 create child theme &nbsp;:&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 1: Create a Magento Theme Folder</h3>\n\n\n\n<p>Create a Magento theme folder for your child theme. This is how your child theme directory structure will look like:&nbsp;</p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">app\n└── design\n   └── frontend\n       └── Vendor\n           └── ChildTheme\n               ├── etc\n               │   └── view.xml\n               ├── registration.php\n               ├── theme.xml\n               ├── web\n               │   ├── css\n               │   │   └── source\n               │   │       └── tailwind.css\n               │   └── tailwind.config.js\n               └── composer.json</pre>\n\n\n\n<h3 class=\"wp-block-heading\">Step 2: Define The Theme’s Configuration</h3>\n\n\n\n<p>Next, create a ‘theme.xml’ file in the child theme directory with the following code base.&nbsp;</p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?xml version=\"1.0\"?>\n&lt;theme xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Config/etc/theme.xsd\">\n &lt;title>Hyvä Child Theme&lt;/title>\n &lt;parent>Vendor/hyva&lt;/parent>\n &lt;media>\n &lt;preview_image>media/preview.jpg&lt;/preview_image>\n &lt;/media>\n\n&lt;/theme></pre>\n\n\n\n<h3 class=\"wp-block-heading\">Step 3: Register the Theme With Magento 2</h3>\n\n\n\n<p>Create a registration.php file inside the folder path app/design/frontend/Hyva/ChildTheme. Here, add below mentioned lines in the code.&nbsp;</p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\nuse \\Magento\\Framework\\Component\\ComponentRegistrar;\nComponentRegistrar::register(ComponentRegistrar::THEME, 'frontend/Vendor/hyva-child', __DIR__);</pre>\n\n\n\n<h3 class=\"wp-block-heading\">Step 4: Configure The Parent Theme</h3>\n\n\n\n<p>You need to ensure that the parent theme’s build processes are in sync with the child theme’s Tailwind configuration.&nbsp;</p>\n\n\n\n<p>To do so, you need to update tailwind.config.js in the parent theme. You can edit file in the parent Hyvä theme to update child theme’s path under ‘content’ array:&nbsp;</p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">module.exports = {\n content: [\n './app/design/frontend/Vendor/ParentTheme/**/*.phtml',\n './app/design/frontend/Vendor/ParentTheme/web/css/source/**/*.css',\n './app/design/frontend/Vendor/ParentTheme/web/js/**/*.js',\n './app/design/frontend/Vendor/ChildTheme/**/*.phtml',\n './app/design/frontend/Vendor/ChildTheme/web/css/source/**/*.css',\n './app/design/frontend/Vendor/ChildTheme/web/js/**/*.js',\n ],\n theme: {\n extend: {\n colors: {\n primary: '#1a202c',\n secondary: '#2d3748',\n },\n },\n },\n plugins: [],\n};</pre>\n\n\n\n<h3 class=\"wp-block-heading\">Step 5: Generate style.css &amp; Apply the Child Theme</h3>\n\n\n\n<p>Create a tailwind.css file in the web/css/source directory of your child theme. This file should include the Tailwind CSS directives:</p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">@tailwind base;\n@tailwind components;\n@tailwind utilities;</pre>\n\n\n\n<p>Here, you can add custom styles, templates and any modifications you like to make in your child theme directory. Refer to the official documentation by Hyvä for regenerating theme’s style.css.&nbsp;</p>\n\n\n\n<p>Once done making all the changes, do run the command –</p>\n\n\n\n<p><code>Bin/magento setup:upgrade</code></p>\n\n\n\n<p>Don’t forget to run below command to flush the cache.&nbsp;</p>\n\n\n\n<p><code>php bin/magento cache:clean</code></p>\n\n\n\n<p>Once the Hyvä child theme is configured, you can check navigating to Content &gt; Design &gt; Configuration on the admin dashboard and set your child theme as ‘Main Website Store’.&nbsp;</p>\n\n\n\n<p>Once applied, you can check the implemented child theme visiting the frontend of your store.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Fully Leverage on Hyvä Child Theme Capabilities</h2>\n\n\n\n<p>Amplify your customer experience by implementing Hyvä themes.&nbsp;</p>\n\n\n\n<p>Since these themes are easy to modify, they are recommended by experienced Magento experts in the domain.&nbsp;</p>\n\n\n\n<p>If you need technical support to fully leverage the capabilities of Hyvä child theme, we are ready to help you. We offer end-to-end&nbsp;<a href=\"https://meetanshi.com/magento-2-hyva-theme-development.html\">Magento 2 Hyvä Development Services</a>&nbsp;to benefit you to help your store reach new heights and perform at its best.</p>\n","date":"2024-08-28T17:44:03","author":{"node":{"name":"Sanjay Jethva"}}}}},"pageContext":{"slug":"how-to-create-a-hyva-child-theme-in-magento-2"}},"staticQueryHashes":[],"slicesMap":{}}